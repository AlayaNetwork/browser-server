apollo:
  access-key:
    # 配置访问密钥
    secret: 78965ef2bfc142918bf324e975eb07aa
  bootstrap:
    # 是否开启 Apollo
    enabled: true
    eagerLoad:
      # 开启后，Apollo的配置会先于logback的配置加载
      enable: true
      # 指定使用哪个 Namespace 的配置，默认 application
    namespaces: application,platon,jasypt
  # Apollo 配置中心地址，多个地址以逗号隔开
  # meta和env推荐使用VM参数指定 -Dapollo.configService=http://192.168.9.149:8080 -Denv=DEV
  # apollo.configService的优先级比apollo.meta高,configService会覆盖meta
  meta: http://192.168.120.144:8080
  # 配置本地配置缓存目录
  cacheDir: ./apolloCache/data/
  property:
    order:
      # 设置内存中的配置项是否保持和页面上的顺序一致
      enable: true
app:
  # 应用ID
  id: scan-agent
# 指定环境
env: DEV
#日志配置
logging:
  file:
    name: ./logs/scan-agent.log
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} | %-5level | %thread | trace-id[%X{trace-id}] | %logger{50}[%L] | %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} | %-5level | %thread | trace-id[%X{trace-id}] | %logger{50}[%L] | %msg%n"
  logback:
    rollingpolicy:
      # 日志文件大小上限，达到该上限后，会自动压缩
      max-file-size: 200MB
      # 日志归档的文件名，日志文件达到一定大小之后，自动进行压缩归档
      file-name-pattern: ./logs/scan-agent-%d{yyyy-MM-dd}-%i.log.gz
      # 日志文件保存的天数
      max-history: 7
      # 是否在应用启动时进行归档管理
      clean-history-on-start: true